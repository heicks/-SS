							0x01.	git config 配置账户
mkdir <仓库名>	0x-02.  ━━	0x02.	git clone 获得git仓库
							0x03.	cd 仓库名
							0x04.	git init 初始化仓库
							0x05.	...work...
	
	
	
Q:
	为什么设置ssh key后push为什么还要输入用户名和密码
A:
	因为你用的是https而不是ssh。
	你可以更新一下origin
	
<code>
	git remote remove origin
	git remote add origin git@github.com:Username/Your_Repo_Name.git
</code>
	之后你还需要重新设置track branch，比如：

<code>
	git branch --set-upstream-to=origin/master master
</code>

	对于HTTPS方式，你可以在~/.netrc文件里设定用户名密码，不过这样的风险在于密码是明文存放在这个文件里的，比较容易泄露

<code>
	machine github.com
	login Username
	password Password
</code>

查看git URL方式
<code>$ git remote -v </code>

将https:// 转换为 ssh:// 方式
<code>git remote set-url origin git@github.com:user/repo.git</code>
                                git@github.com:heicks/-SS.git

更改文件权限
<content>
	在windows下的文件的权限因为无法和linux上完全一致，所以用Git检出的文件权限可能显示为被更改

	另外因为windows下的换行和linux上也不一样，协作开发时也容易出问题。所以在windows上使用Git的同学需要加上以下2行配置参数：

	# 忽略文件权限的改动。
	$ git config --global core.filemode false 
	# 将文件checkout时自动把LF转成CRLF，check in 时自动把CRLF转成LF
	$ git config --global core.autocrlf true 
</content>


设置常用命令的别名

PATH: 在用户的home目录下，有一个.gitconfig文件，里面可以配置一些别名，方便平时的git操作。
<code>
	--------------------------
	[alias]
		st = status -s
		ci = commit
		l = log --oneline --decorate -13
		ll = log --oneline --decorate
		co = checkout
		br = branch
		rb = rebase
		dci = dcommit
	--------------------------------
</code>


<post>
Git 中文文件名支持

	<content>
		git add 的时候，中文会显示成"“\344\270\255\346\226\207.txt"，使用如下命令进行配置：
	</content>

	<code>
		git config --global core.quotepath false
	</code>
</post>






























	.
